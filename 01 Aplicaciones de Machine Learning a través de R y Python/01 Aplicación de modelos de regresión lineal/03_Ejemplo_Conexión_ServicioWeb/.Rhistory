# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
#dataframes_extraidos
Datos_PML <- as.data.frame( cbind( Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
PML_08MDN.115 = dataframes_extraidos[[1]]$pml,
PML_01NEC.85 = dataframes_extraidos[[2]]$pml,
PML_01ITD.115 = dataframes_extraidos[[3]]$pml,
PML_01PCC.85 = dataframes_extraidos[[4]]$pml,
PML_06PTA.138 = dataframes_extraidos[[5]]$pml ) )
tail(Datos_PML)
df_Means <- data.frame( PML_08MDN.115 = mean(as.numeric(Datos_PML$PML_08MDN.115)),
PML_01NEC.85 = mean(as.numeric(Datos_PML$PML_01NEC.85)),
PML_01ITD.115 = mean(as.numeric(Datos_PML$PML_01ITD.115)),
PML_01PCC.85 = mean(as.numeric(Datos_PML$PML_01PCC.85)),
PML_06PTA.138 = mean(as.numeric(Datos_PML$PML_06PTA.138)) )
datatable( df_Means, rownames = F, options = list(ordering = T),
filter = list( position = 'top', clear = T )) %>%
formatCurrency( c(1:5), currency = "$", interval = 3, mark = ",", digits = 2)
# Creamos variable de fecha
Datos_PML$Periodo <- as.POSIXct( paste( Datos_PML$Fecha, Datos_PML$Hora, sep = " "),
format = "%Y-%m-%d %H" )
fig <- plot_ly( x = Datos_PML$Periodo, y = as.numeric( Datos_PML$PML_08MDN.115), name = '08MDN-115',
type = 'scatter', mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'darkblue'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_01NEC.85 ), name = '01NEC-85',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'darkred'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_01ITD.115 ), name = '01ITD-115',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'darkgreen'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_01PCC.85 ), name = '01PCC-85',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'gold'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_06PTA.138 ), name = '06PTA.138',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'orange'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% layout(legend = list(x = 0.1, y = 1.0, orientation = 'h'))
fig <- fig %>% layout( xaxis = list(title = "Time", tickangle = 0),
yaxis = list(title = "MXN", tickformat = "$,"),
font = list( family = "calibri", size = 14, color = 'black'))
fig
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodos
anio_ini <- "2024"
mes_ini <- "09"
dia_ini <- "01"
anio_fin <- "2024"
mes_fin <- "09"
dia_fin <- "07"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
#dataframes_extraidos
Datos_PML <- as.data.frame( cbind( Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
PML_08MDN.115 = dataframes_extraidos[[1]]$pml,
PML_01NEC.85 = dataframes_extraidos[[2]]$pml,
PML_01ITD.115 = dataframes_extraidos[[3]]$pml,
PML_01PCC.85 = dataframes_extraidos[[4]]$pml,
PML_06PTA.138 = dataframes_extraidos[[5]]$pml ) )
tail(Datos_PML)
df_Means <- data.frame( PML_08MDN.115 = mean(as.numeric(Datos_PML$PML_08MDN.115)),
PML_01NEC.85 = mean(as.numeric(Datos_PML$PML_01NEC.85)),
PML_01ITD.115 = mean(as.numeric(Datos_PML$PML_01ITD.115)),
PML_01PCC.85 = mean(as.numeric(Datos_PML$PML_01PCC.85)),
PML_06PTA.138 = mean(as.numeric(Datos_PML$PML_06PTA.138)) )
datatable( df_Means, rownames = F, options = list(ordering = T),
filter = list( position = 'top', clear = T )) %>%
formatCurrency( c(1:5), currency = "$", interval = 3, mark = ",", digits = 2)
# Creamos variable de fecha
Datos_PML$Periodo <- as.POSIXct( paste( Datos_PML$Fecha, Datos_PML$Hora, sep = " "),
format = "%Y-%m-%d %H" )
fig <- plot_ly( x = Datos_PML$Periodo, y = as.numeric( Datos_PML$PML_08MDN.115), name = '08MDN-115',
type = 'scatter', mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'darkblue'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_01NEC.85 ), name = '01NEC-85',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'darkred'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_01ITD.115 ), name = '01ITD-115',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'darkgreen'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_01PCC.85 ), name = '01PCC-85',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'gold'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% add_trace( y = as.numeric( Datos_PML$PML_06PTA.138 ), name = '06PTA.138',
type = 'scatter',  mode = 'lines', text = Datos_PML$Periodo,
line = list(color = 'orange'),
hovertemplate = paste( '<b>Precio</b>: $%{y:,.2f} en el momento: ',
'<b>%{text}</b>') )
fig <- fig %>% layout(legend = list(x = 0.1, y = 1.0, orientation = 'h'))
fig <- fig %>% layout( xaxis = list(title = "Time", tickangle = 0),
yaxis = list(title = "MXN", tickformat = "$,"),
font = list( family = "calibri", size = 14, color = 'black'))
fig
knitr::opts_chunk$set(echo = TRUE) # Valor predeterminado global para los encabezados de chunks
#install.packages("rmarkdown")
#library(rmarkdown)
#install.packages("plotly") # Paquetería de visualización interactiva
#install.packages("httr") # Biblioteca que tiene funciones para consulta Web
# Do you want to install from sources the package which needs compilation? (Yes/no/cancel) Y
#install.packages("jsonlite") # Para manejo de archivos JSON
#install.packages("DT") # Para manejo de tablas
library(readxl)
library(httr)
library(dplyr)
library(plotly)
library(jsonlite)
library(DT)
library(tidyr)
response <- GET( 'https://www.cenace.gob.mx/Docs/01_MECP/CatalogoNodosP/2024/Cata%CC%81logo%20NodosP%20Sistema%20Ele%CC%81ctrico%20Nacional%20(v2024-01-24)%20.xlsx' )
temp_file <- tempfile(fileext = ".xlsx")
writeBin(content(response, "raw"), temp_file)
datos <- read_excel(temp_file, sheet = 1, skip = 1)
datos <- datos %>% filter(SISTEMA == 'SIN')
View(datos)
set.seed(1234) # Personalizar
Datos_Nodos <- datos[ sample( nrow( datos ), 120, replace = FALSE), ]
View(Datos_Nodos)
Datos_PML_01 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2023"
mes_ini <- "12"
dia_ini <- "01"
anio_fin <- "2023"
mes_fin <- "12"
dia_fin <- "07"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_01 <- rbind( Datos_PML_01,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_02 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2023"
mes_ini <- "12"
dia_ini <- "08"
anio_fin <- "2023"
mes_fin <- "12"
dia_fin <- "14"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_02 <- rbind( Datos_PML_02,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_03 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2023"
mes_ini <- "12"
dia_ini <- "15"
anio_fin <- "2023"
mes_fin <- "12"
dia_fin <- "21"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_03 <- rbind( Datos_PML_03,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_04 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2023"
mes_ini <- "12"
dia_ini <- "22"
anio_fin <- "2023"
mes_fin <- "12"
dia_fin <- "28"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_04 <- rbind( Datos_PML_04,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_05 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2023"
mes_ini <- "12"
dia_ini <- "29"
anio_fin <- "2023"
mes_fin <- "12"
dia_fin <- "31"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_05 <- rbind( Datos_PML_05,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_06 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2024"
mes_ini <- "01"
dia_ini <- "01"
anio_fin <- "2024"
mes_fin <- "01"
dia_fin <- "07"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_06 <- rbind( Datos_PML_06,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_07 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2024"
mes_ini <- "01"
dia_ini <- "08"
anio_fin <- "2024"
mes_fin <- "01"
dia_fin <- "14"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_07 <- rbind( Datos_PML_07,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_08 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2024"
mes_ini <- "01"
dia_ini <- "15"
anio_fin <- "2024"
mes_fin <- "01"
dia_fin <- "21"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_08 <- rbind( Datos_PML_08,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_09 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2024"
mes_ini <- "01"
dia_ini <- "22"
anio_fin <- "2024"
mes_fin <- "01"
dia_fin <- "28"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_09 <- rbind( Datos_PML_09,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML_10 <- data.frame()
for( Nodo in Datos_Nodos$CLAVE ){
# Definir los parámetros de la URL
sistema <- "SIN"
proceso <- "MDA"
lista_nodos <- Nodo
anio_ini <- "2024"
mes_ini <- "01"
dia_ini <- "29"
anio_fin <- "2024"
mes_fin <- "01"
dia_fin <- "31"
formato <- "JSON"
# Construir la URL de invocación
url <- paste0("https://ws01.cenace.gob.mx:8082/SWPML/SIM/",
sistema, "/", proceso, "/", lista_nodos, "/",
anio_ini, "/", mes_ini, "/", dia_ini, "/",
anio_fin, "/", mes_fin, "/", dia_fin, "/",
formato)
# Realizar la solicitud GET al servicio web
respuesta <- GET(url)
# Convertir el JSON en un DataFrame
datos <- fromJSON(content(respuesta, "text"), flatten = TRUE)
# Convertir la lista anidada "Resultados" en un DataFrame
resultados_df <- datos$Resultados
# Utilizar lapply para extraer DataFrames contenidos en la columna 'lista_de_dataframes'
dataframes_extraidos <- lapply(resultados_df$Valores, function(x) as.data.frame(x))
# Extraemos datos y los apendizamos
Datos_PML_10 <- rbind( Datos_PML_10,
as.data.frame( cbind( Nodo = Nodo,
Fecha = dataframes_extraidos[[1]]$fecha,
Hora = dataframes_extraidos[[1]]$hora,
pml = as.numeric(dataframes_extraidos[[1]]$pml) ) ) )
}
Datos_PML <- rbind( Datos_PML_01, Datos_PML_02, Datos_PML_03, Datos_PML_04, Datos_PML_05,
Datos_PML_06, Datos_PML_07, Datos_PML_08, Datos_PML_09, Datos_PML_10 )
View(Datos_PML)
Datos_PML_Wide <- Datos_PML %>% pivot_wider( names_from = Nodo,
values_from = pml  )
View(Datos_PML_10)
View(Datos_PML_Wide)
Datos_PML_Wide[ , c(3:122)] <- lapply(Datos_PML_Wide[ , c(3:122)], as.numeric)
medias_PML <- data.frame( colMeans( Datos_PML_Wide[ , c(3:122)] ) )
View(medias_PML)
names(medias_PML) <- c("Precio Promedio")
datatable( medias_PML, rownames = T, options = list(ordering = T),
filter = list( position = 'top', clear = T )) %>%
formatCurrency( c(1), currency = "$", interval = 3, mark = ",", digits = 2)
# Guardar el dataframe en un archivo CSV
write.csv(Datos_PML, "Datos_PML.csv", row.names = FALSE)
write.csv(Datos_PML_Wide, "Datos_PML_Wide.csv", row.names = FALSE)
